version: "3.9"

services:
  mysql:
    image: mysql:8.0
    container_name: mysql8
    restart: unless-stopped
    environment:
      MYSQL_ROOT_PASSWORD: 123456789
      MYSQL_DATABASE: create-learn-db
      MYSQL_USER: developer
      MYSQL_PASSWORD: 123456789
    ports:
      - "3307:3306"
    volumes:
      - mysql_data:/var/lib/mysql
    command: --default-authentication-plugin=mysql_native_password
    healthcheck:
      test: ["CMD", "mysqladmin", "ping", "-h", "localhost"]
      interval: 10s
      retries: 5
      timeout: 5s

  minio:
    image: minio/minio:latest
    container_name: minio
    restart: unless-stopped
    environment:
      MINIO_ROOT_USER: minioadmin
      MINIO_ROOT_PASSWORD: minioadmin123
    ports:
      - "9000:9000"
      - "9001:9001"
    volumes:
      - minio_data:/data
    command: server /data --console-address ":9001"
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:9000/minio/health/live"]
      interval: 30s
      timeout: 20s
      retries: 3

  minio-init:
    image: minio/mc
    container_name: minio-init
    depends_on:
      - minio
    entrypoint: ["/bin/sh", "/init/init-minio.sh"]
    volumes:
      - ./data/minio:/data/minio
      - ./init:/init
    restart: "no"

  createlearn-be:
    image: createlearn-be:latest  # Build from your Dockerfile
    container_name: createlearn-be
    restart: unless-stopped
    depends_on:
      mysql:
        condition: service_healthy
      minio:
        condition: service_healthy
    environment:
      SPRING_PROFILES_ACTIVE: prod
      DB_URL: jdbc:mysql://mysql:3306/create-learn-db
      DB_USERNAME: developer
      DB_PASSWORD: 123456789
      MINIO_URL: http://minio:9000
      MINIO_ACCESS_KEY: minioadmin
      MINIO_SECRET_KEY: minioadmin123
      MINIO_BUCKET: create-learn-storage
      JWT_SECRET_KEY: my-super-secret
    ports:
      - "8080:8080"
    volumes:
      - ./logs:/app/logs

volumes:
  mysql_data:
  minio_data:
